version: '3.8'

services:
  # ─────────────────────────────────── MySQL ───────────────────────────────────
  mysql:
    image: mysql:8
    container_name: dailyfit-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE:     ${DB_NAME}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  # ────────────────────────────── Prometheus ──────────────────────────────────
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./monitoring/prometheus:/etc/prometheus:ro
    ports:
      - "9091:9090"    # change to "9091:9090" if host 9090 is already in use

  # ───────────────────────────────── Grafana ─────────────────────────────────
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-}
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"

  # ────────────────────────────────── Ollama ──────────────────────────────────
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    entrypoint: >
      sh -c "
        # 1) start the Ollama server in the background
        ollama serve &

        # 2) give it time to initialize
        echo 'Sleeping 10s for Ollama to start…'
        sleep 10

        # 3) pull the desired model
        echo 'Pulling model llama2…'
        ollama pull gemma3n:latest || exit 1

        # 4) wait on the server process so the container stays alive
        wait
      "
    restart: unless-stopped

volumes:
  mysql_data:
  grafana_data:
  ollama_data:
